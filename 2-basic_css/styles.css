h1, h2, p {
    text-align: center;
  }

  img{
    display: block; /*set the display property of the element to block, images are inline by default,  to be able to set the margin property, we need to set the display property to block*/
    margin: 20px auto; /*set the margin for the top and bottom of the element*/
    margin-top: -25px; /*set the margin for the top of the element, this is a negative value, so the image will move up*/
  }

  h1, h2{
    font-family: Impact, serif; /*this is how to add fallback fonts, if the first font is not available, the browser will try the next font*/
  }

  h1 {
    font-size: 40px; /*set the font size for all text in this element*/
  }

  h2 {
    font-size: 30px;
    margin-top: 0; /*set the margin for the top of the element*/
    margin-bottom: 15px; /*set the margin for the bottom of the element*/ 
  }

  body {
    background-image: url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg); /*use and image as a background for an element*/
    font-family: sans-serif; /*set the font family for all text in these elements*/
    padding: 20px; 
  }
  
  .established{
    font-style: italic; /*set the font style for all text in this element*/
  }

  hr{
    height: 2px;
    background-color: brown;
    border-color: brown; /*set the border color for all sides of the element*/
  }

  .bottom-line{
    margin-top: 25px;
  }
  
 .menu {
    width: 80%;/*(1)The goal now is to make the div not take up the entire width of the page, taking 80% of parent element width*/
    background-color: burlywood;
    margin: 0  auto; /*(2)The goal now is to center the div on the page, auto will center the div on the page, the 0 is for the top and bottom margin, the auto is for the left and right margin*/
    padding:20px; /*the padding is the space between the content and the border, this makes all 4 sides 20px, this is the same as padding: 20px 20px 20px 20px, which is the same as padding: 20px 20px, which is the same as padding: 20px*/
    max-width: 500px; /*this is the maximum width of the div,on a very wide screen the coffee and dessert appear far apart from their prices. if the screen is smaller than 500px, the div will take up the entire width of the screen*/
  }

 

  .item p { 
    display:inline-block; /*with this property, the p element in any item class will be displayed as an inline-level block container, following eachother horizontally. The element itself is formatted as an inline element, but you can apply height and width values becasue they are block too*/
    margin: 5px 0 5px 0; /* this sets the margin for all 4 sides of the element, the first 5px is for the top margin, the second 0px is for the right margin, the third 5px is for the bottom margin, the fourth 0px is for the left margin*/
    font-size: 18px;
  }
  
  .flavor, .dessert { /*here is how to add to class selectors on a style*/
    text-align: left;
    width: 75%;/*this could be 50% as well as the price, but the flavour has more text so it needs more space in the event of a smaller screen*/
  }
  
  .price {
    text-align: right;
    width: 25%;
  }


  /*FOOTER and links styling*/

  .address {
    margin-bottom: 5px;
  }

  a{
    color: black; /*this is how to style a link*/
  }

  a:visited {color: grey /*this is how to style a link that has been visited*/
  }

  a:hover { color: brown /*this is how to style a link when the mouse hovers over it*/
  }

  a:active { color: white /*this is how to style a link when it is clicked*/
  }